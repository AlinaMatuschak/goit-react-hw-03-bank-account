{"version":3,"sources":["components/Controls/Controls.module.css","components/Balance/Balance.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Controls/Controls.jsx","components/Balance/Balance.jsx","components/TransactionHistory/TransactionHistory.jsx","components/helpers/localStorege.js","components/Dashboard.jsx","index.jsx"],"names":["module","exports","Controls","state","amount","handeleChange","e","setState","currentTarget","value","reset","handleTransfer","target","Number","props","balance","onTransfer","toast","name","className","controls","type","this","onChange","onClick","Component","Balance","income","expenses","balanceTransactions","role","aria-labelledby","TransactionHistory","items","history","map","id","date","key","localStorage","setItem","JSON","stringify","err","console","log","transactions","getItem","parse","Dashboard","createTransaction","shortid","generate","Date","toLocaleString","findSumByType","filter","el","reduce","count","prevState","storage","prevProps","length","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.9719438d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__3W3bZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balanceTransactions\":\"Balance_balanceTransactions__2mFQd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__Mq_Q9\"};","import React, { Component } from 'react';\r\nimport T from 'prop-types';\r\nimport { controls } from './Controls.module.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default class Controls extends Component {\r\n  static propTypes = {\r\n    balance: T.number.isRequired,\r\n    onTransfer: T.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    amount: '',\r\n  };\r\n\r\n  handeleChange = e => {\r\n    this.setState({\r\n      amount: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  reset = () => this.setState({ amount: '' });\r\n\r\n  handleTransfer = ({ target }) => {\r\n    const amount = Number(this.state.amount);\r\n    const { balance, onTransfer } = this.props;\r\n\r\n    if (!amount) {\r\n      toast('Введите сумму для проведения операции!');\r\n      return;\r\n    }\r\n\r\n    if (amount < 0) {\r\n      toast('Введите положительное число!');\r\n      return;\r\n    }\r\n\r\n    if (target.name === 'withdraw' && amount > balance) {\r\n      toast('На счету недостаточно средств для проведения операции!');\r\n      return;\r\n    }\r\n\r\n    target.name === 'deposit'\r\n      ? onTransfer(amount, target.name)\r\n      : onTransfer(amount, target.name);\r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className={controls}>\r\n        <input\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          value={this.state.amount}\r\n          onChange={this.handeleChange}\r\n        />\r\n        <button type=\"button\" name=\"deposit\" onClick={this.handleTransfer}>\r\n          Deposit\r\n        </button>\r\n        <ToastContainer />\r\n        <button type=\"button\" name=\"withdraw\" onClick={this.handleTransfer}>\r\n          Withdraw\r\n        </button>\r\n        <ToastContainer />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport { balanceTransactions } from './Balance.module.css';\r\n\r\nconst Balance = ({ balance, income, expenses }) => (\r\n  <section className={balanceTransactions}>\r\n    <span role=\"img\" aria-labelledby=\"arrow1\">\r\n      ⬆️{income}$\r\n    </span>\r\n    <span role=\"img\" aria-labelledby=\"arrow2\">\r\n      ⬇️{expenses}$\r\n    </span>\r\n    <span>Balance: {balance}$</span>\r\n  </section>\r\n);\r\n\r\nBalance.propTypes = {\r\n  balance: T.number.isRequired,\r\n  income: T.number.isRequired,\r\n  expenses: T.number.isRequired,\r\n};\r\n\r\nexport default Balance;\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport { history } from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className={history}>\r\n    <thead>\r\n      <tr>\r\n        <th>Transaction</th>\r\n        <th>Amount</th>\r\n        <th>Date</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {items.map(({ id, type, amount, date }) => (\r\n        <tr key={id}>\r\n          <td>{type}</td>\r\n          <td>{amount}$</td>\r\n          <td>{date}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: T.array.isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","const save = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nconst get = key => {\r\n  try {\r\n    const transactions = localStorage.getItem(key);\r\n    return transactions ? JSON.parse(transactions) : null;\r\n  } catch (err) {\r\n    console.log('err');\r\n  }\r\n};\r\n\r\nexport default { save, get };\r\n","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport './Dashboard.module.css';\r\nimport Controls from './Controls/Controls';\r\nimport Balance from './Balance/Balance';\r\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\r\nimport storage from './helpers/localStorege';\r\n\r\nexport default class Dashboard extends Component {\r\n  state = {\r\n    transactions: [],\r\n    balance: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const transactions = storage.get('transactions');\r\n    const balance = storage.get('balance');\r\n\r\n    if (transactions && balance) {\r\n      this.setState({ transactions, balance });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { transactions, balance } = this.state;\r\n\r\n    if (prevState.transactions !== transactions) {\r\n      storage.save('transactions', transactions);\r\n    }\r\n\r\n    if (prevState.balance !== balance) {\r\n      storage.save('balance', balance);\r\n    }\r\n  }\r\n\r\n  createTransaction = (type, amount) => ({\r\n    id: shortid.generate(),\r\n    type,\r\n    amount,\r\n    date: new Date().toLocaleString(),\r\n  });\r\n\r\n  findSumByType = type => {\r\n    return this.state.transactions\r\n      .filter(el => el.type === type)\r\n      .reduce((count, el) => (count += el.amount), 0);\r\n  };\r\n\r\n  handleTransfer = (amount, type) => {\r\n    this.setState(prevState => ({\r\n      transactions: [\r\n        ...prevState.transactions,\r\n        this.createTransaction(type, amount),\r\n      ],\r\n      balance:\r\n        type === 'deposit'\r\n          ? prevState.balance + amount\r\n          : prevState.balance - amount,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { balance, transactions } = this.state;\r\n    return (\r\n      <div className=\"dashboard\">\r\n        <Controls onTransfer={this.handleTransfer} balance={balance} />\r\n\r\n        <Balance\r\n          balance={balance}\r\n          income={this.findSumByType('deposit')}\r\n          expenses={this.findSumByType('withdraw')}\r\n        />\r\n\r\n        {transactions.length > 0 && <TransactionHistory items={transactions} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Dashboard from './components/Dashboard';\r\n\r\nReactDOM.render(<Dashboard />, document.querySelector('#root'));\r\n"],"sourceRoot":""}